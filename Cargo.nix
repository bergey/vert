# Generated by carnix 0.10.0: carnix generate-nix --src ./.
{ lib, buildPlatform, buildRustCrate, buildRustCrateHelpers, cratesIO, fetchgit }:
with buildRustCrateHelpers;
let inherit (lib.lists) fold;
    inherit (lib.attrsets) recursiveUpdate;
in
rec {
  crates = cratesIO // rec {
# vert-0.1.0

    crates.vert."0.1.0" = deps: { features?(features_.vert."0.1.0" deps {}) }: buildRustCrate {
      crateName = "vert";
      version = "0.1.0";
      authors = [ "Daniel Bergey <bergey@teallabs.org>" ];
      edition = "2018";
      src = exclude [ ".git" "target" ] ./.;
      dependencies = mapFeatures features ([
        (cratesIO.crates."term_size"."${deps."vert"."0.1.0"."term_size"}" deps)
        (cratesIO.crates."termios"."${deps."vert"."0.1.0"."termios"}" deps)
      ]);
    };
    features_.vert."0.1.0" = deps: f: updateFeatures f (rec {
      term_size."${deps.vert."0.1.0".term_size}".default = true;
      termios."${deps.vert."0.1.0".termios}".default = true;
      vert."0.1.0".default = (f.vert."0.1.0".default or true);
    }) [
      (cratesIO.features_.term_size."${deps."vert"."0.1.0"."term_size"}" deps)
      (cratesIO.features_.termios."${deps."vert"."0.1.0"."termios"}" deps)
    ];


# end

  };

  vert = crates.crates.vert."0.1.0" deps;
  __all = [ (vert {}) ];
  deps.kernel32_sys."0.2.2" = {
    winapi = "0.2.8";
    winapi_build = "0.1.1";
  };
  deps.libc."0.2.62" = {};
  deps.term_size."0.3.1" = {
    libc = "0.2.62";
    kernel32_sys = "0.2.2";
    winapi = "0.2.8";
  };
  deps.termios."0.3.1" = {
    libc = "0.2.62";
  };
  deps.vert."0.1.0" = {
    term_size = "0.3.1";
    termios = "0.3.1";
  };
  deps.winapi."0.2.8" = {};
  deps.winapi_build."0.1.1" = {};
}
